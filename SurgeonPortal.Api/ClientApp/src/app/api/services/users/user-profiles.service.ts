import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { HttpClient } from '@angular/common/http';

import { IUserProfileModel } from '../../models/users/user-profile.model';

/**
#############################################################################
WARNING GENERATED CODE DO NOT MODIFY - 

All client side API services are generated by the server side API 
developer when the API is created. Please do not make changes to this file

############################################################################
**/

@Injectable({
  providedIn: 'root',
})
export class UserProfilesService {
  private readonly baseEndpoint = 'user/profiles';

    constructor(private httpClient: HttpClient) {}

 
        public retrieveUserProfile_GetByUserId(userId: number): Observable<IUserProfileModel> {
    /**
     * Claims
     */

    /**
     * Business Rules
     * No business rules exist for this model
     */

    /**
     * Required Parameters
     * userId:Number
     * apiVersion
     */

    /**
     * Calls Sp(s)
     * [get_user_profile_byuserid]
     */

            
            return this.httpClient.get<IUserProfileModel>(`${this.baseEndpoint}/by-userId?api-version=${apiVersion}`, {
                userId
            });
  }

        public updateUserProfile(userId: number,
    model: IUserProfileModel,
        apiVersion = '1.0') : Observable<IUserProfileModel> {
    /**
     * Claims
     */

    /**
     * Business Rules
     * No business rules exist for this model
     */

    /**
     * Required Parameters
     * userProfileId:Number
     * userId:Number
     * firstName:String
     * middleName:String
     * lastName:String
     * suffix:String
     * displayName:String
     * officePhoneNumber:String
     * mobilePhoneNumber:String
     * birthCity:String
     * birthState:String
     * birthCountry:String
     * countryCitizenship:String
     * aBSId:Number
     * certificationStatusId:Number
     * nPI:String
     * gender:String
     * birthDate:String
     * race:String
     * ethnicity:String
     * firstLanguage:String
     * bestLanguage:String
     * receiveComms:Boolean
     * userConfirmed:Boolean
     * userConfirmedDate:String
     * createdByUserId:Number
     * createdAtUtc:String
     * lastUpdatedAtUtc:String
     * lastUpdatedByUserId:Number
     * apiVersion
     */

    /**
     * Calls Sp(s)
     * [update_user_profile]
     */

            
    //TODO - Fix this PUT implementation when we fix the PUT calls in the YTG-ANGULAR package
            return this.httpClient.put<IUserProfileModel>(`${this.baseEndpoint}/${UserId}?api-version=${apiVersion}`,
            model);
  }


}
